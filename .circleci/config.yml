# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Node orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecs: circleci/aws-ecs@4.0.0
  node: circleci/node@5.2

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
jobs:
  build_and_push_image:
    docker:
      - image: cimg/node:lts
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login --username ${DOCKER_USER} --password ${GITHUB_TOKEN} ${DOCKER_REPO}
      - run: docker build --tag ghcr.io/${DOCKER_USER}/docker-react:circleci -f Dockerfile.dev .
      - run: docker push ${DOCKER_REPO}/${DOCKER_USER}/docker-react:circleci

  npm_run_test:
    docker:
      - image: ${DOCKER_REPO}/${DOCKER_USER}/docker-react:circleci
    resource_class: small
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run test
  
  npm_run_build:
    docker:
      - image: ${DOCKER_REPO}/${DOCKER_USER}/docker-react:circleci
    resource_class: small
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: npm run build
workflows:
  test_react_app:
    jobs:
      - build_and_push_image
      - npm_run_test
      - npm_run_build